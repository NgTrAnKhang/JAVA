/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package v1;
import java.awt.List;
import java.io.File;
import java.util.ArrayList;
import java.sql.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
//import org.apache.poi.xwpf.usermodel.*;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.swing.JTable;
import static javax.swing.JTable.PrintMode.FIT_WIDTH;
import org.apache.poi.wp.usermodel.HeaderFooterType;
import org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy;

//import org.apache.poi.xwpf.usermodel.XWPFDocument;
//import org.apache.poi.xwpf.usermodel.XWPFParagraph;
//import org.apache.poi.xwpf.usermodel.XWPFRun;
//import org.apache.poi.xwpf.usermodel.XWPFTable;
//import org.apache.poi.xwpf.usermodel.XWPFTableCell;
//import org.apache.poi.xwpf.usermodel.XWPFTableRow;
import org.apache.poi.xwpf.usermodel.*;
import static v1.User.isInteger;

/**
 *
 * @author Khang
 */
public class Bill extends javax.swing.JFrame {

    /**
     * Creates new form Products
     */
    public Bill() {
        //this.hello = new ArrayList<>();
        initComponents();
        SelectBill();
        lbUser.setText(Login.userloged);
        if (Login.userloged.matches("admin"))
        {
            lbQLSP.setVisible(true);
            lbQLTK.setVisible(true);
        }
        else
        {
            lbQLSP.setVisible(false);
            lbQLTK.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_Logout = new javax.swing.JButton();
        lbUser = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BillTable = new javax.swing.JTable();
        btn_Find = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        tf_id = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        BillDetailTable = new javax.swing.JTable();
        btn_Print = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tf_user = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tf_date = new javax.swing.JTextField();
        lbTDH = new javax.swing.JLabel();
        lbQLSP = new javax.swing.JLabel();
        lbQLTK = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btn_Logout.setText("Đăng xuất");
        btn_Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LogoutActionPerformed(evt);
            }
        });

        lbUser.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        lbUser.setForeground(new java.awt.Color(0, 0, 0));
        lbUser.setText("User");

        BillTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Giá"
            }
        ));
        BillTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BillTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BillTable);

        btn_Find.setText("Tìm");
        btn_Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_FindActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel3.setText("Mã hóa đơn");

        tf_id.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        tf_id.setText("0");

        jLabel8.setFont(new java.awt.Font("sansserif", 0, 48)); // NOI18N
        jLabel8.setText("Hóa đơn");

        BillDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Giá", "Tổng"
            }
        ));
        BillDetailTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BillDetailTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(BillDetailTable);

        btn_Print.setText("In");
        btn_Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PrintActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel4.setText("Người tạo");

        tf_user.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        jLabel5.setText("Ngày tạo");

        tf_date.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        tf_date.setText("YYYY-MM-DD");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(59, 59, 59)
                                .addComponent(tf_user, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(38, 38, 38)
                                .addComponent(tf_id, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(38, 38, 38)
                                .addComponent(tf_date, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btn_Find, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_Print, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(381, 381, 381)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(tf_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tf_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Find, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Print, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        lbTDH.setForeground(new java.awt.Color(0, 0, 0));
        lbTDH.setText("Tạo đơn hàng");
        lbTDH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbTDHMouseClicked(evt);
            }
        });

        lbQLSP.setForeground(new java.awt.Color(0, 0, 0));
        lbQLSP.setText("Quản lý sản phẩm");
        lbQLSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbQLSPMouseClicked(evt);
            }
        });

        lbQLTK.setForeground(new java.awt.Color(0, 0, 0));
        lbQLTK.setText("Quản lý tài khoản");
        lbQLTK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbQLTKMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lbUser)
                            .addGap(27, 27, 27))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addComponent(btn_Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbTDH)
                    .addComponent(lbQLSP)
                    .addComponent(lbQLTK))
                .addGap(23, 23, 23)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbUser)
                .addGap(51, 51, 51)
                .addComponent(lbTDH)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbQLSP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbQLTK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Logout, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LogoutActionPerformed
        Login login=new Login();
        login.setVisible(true);
        login.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btn_LogoutActionPerformed

    public void SelectBill()
    {
        try
        {
            PreparedStatement ps;
            ResultSet rs;
            String query="Select bill_id,bill_date from tbBill";
            String username=Login.userloged;
            ps=MyConnection.getConnection().prepareStatement(query);
            rs=ps.executeQuery();
            BillTable.setModel(DbUtils.resultSetToTableModel(rs));
//            ps=MyConnection.getConnection().prepareStatement(query2);
//            ps.setString(1,username);
//            rs=ps.executeQuery();
//            BillDetailTable.setModel(DbUtils.resultSetToTableModel(rs));
//            ps=MyConnection.getConnection().prepareStatement(query3);
//            ps.setString(1,username);
//            rs=ps.executeQuery();
//            if (rs.next())
//            {
//                //lbTotal.setText(String.valueOf(rs.getInt("sum(Total)"))+"VNĐ");
//            }
            
        }
        catch(SQLException e)
        {
            System.out.println(e.toString());
        } 
    }    
    
    public static int price;
    public static int stock;
    public static String proc;
    private void lbQLSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbQLSPMouseClicked
        Products pr=new Products();
        pr.setVisible(true);
        pr.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_lbQLSPMouseClicked

    private void lbQLTKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbQLTKMouseClicked
        UserManagement pr=new UserManagement();
        pr.setVisible(true);
        pr.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_lbQLTKMouseClicked

    private void btn_PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PrintActionPerformed

        XWPFDocument document = new XWPFDocument();
        XWPFParagraph header = document.createParagraph();
        XWPFParagraph body = document.createParagraph();
        
        XWPFRun headerrun = header.createRun();
        XWPFRun bodyrun = body.createRun();

        header.setAlignment(ParagraphAlignment.CENTER);
        headerrun.setFontFamily("Arial");
        headerrun.setFontSize(28);
        headerrun.setBold(true);
        headerrun.setText("Hóa đơn số: "+idBill);
        headerrun.addBreak();
        bodyrun.setText("Người tạo: "+usercreated);
        bodyrun.addBreak();
        bodyrun.setText("Ngày tạo: "+date);
        bodyrun.addBreak();
        int numRows = ProductNameList.size()+1;
        int numCols = 4;
        XWPFTable table = document.createTable(numRows, numCols);

        table.setWidth("100%");

        table.setTopBorder(XWPFTable.XWPFBorderType.SINGLE, 1, 1, "000000");
        table.setBottomBorder(XWPFTable.XWPFBorderType.SINGLE, 1, 1, "000000");
        table.setInsideHBorder(XWPFTable.XWPFBorderType.SINGLE, 1, 1, "000000");
        table.setInsideVBorder(XWPFTable.XWPFBorderType.SINGLE, 1, 1, "000000");

        for (int row = 0; row < numRows; row++) {
            XWPFTableRow tableRow = table.getRow(row);
            for (int col = 0; col < numCols; col++) {
                XWPFTableCell tableCell = tableRow.getCell(col);
                int temp=row-1;
                if (col==0)
                {
                    if (row==0)
                    {
                        tableCell.setText("Tên sản phẩm");
                    }
                    else
                    {
                        tableCell.setText(ProductNameList.get(temp));
                    }
                    
                }
                if (col==1)
                {
                    if (row==0)
                    {
                        tableCell.setText("Số lượng");
                    }
                    else
                    {
                        tableCell.setText(QuantityList.get(temp).toString());
                    }
                    
                }
                if (col==2)
                {
                    if (row==0)
                    {
                        tableCell.setText("Giá");
                    }
                    else
                    {
                        tableCell.setText(PriceList.get(temp).toString());
                    }
                    
                }
                if (col==3)
                {
                    if (row==0)
                    {
                        tableCell.setText("Tổng");
                    }
                    else
                    {
                        tableCell.setText(ProductPriceTotalList.get(temp).toString());
                    }
                    
                }
            }
        }
        XWPFParagraph footer = document.createParagraph();
        XWPFRun footerrun = footer.createRun();
        footer.setAlignment(ParagraphAlignment.RIGHT);
        footerrun.setText("Tổng hóa đơn: "+sum);

        // Save the document to a file
        File file = new File("C:\\Users\\ankha\\OneDrive\\Desktop\\Hóa đơn\\HD"+idBill+".docx");
        if (file.exists())
        {
            JOptionPane.showMessageDialog(null, "Đã tồn tại hóa đơn "+idBill+"\nĐường dẫn là C:\\Users\\ankha\\OneDrive\\Desktop\\Hóa đơn\\HD"+idBill+".docx");
        }
        else
        {
            try (FileOutputStream out = new FileOutputStream("C:\\Users\\ankha\\OneDrive\\Desktop\\Hóa đơn\\HD"+idBill+".docx")) {
            document.write(out);
            System.out.println("Table created successfully.");
            JOptionPane.showMessageDialog(null, "In hóa đơn thành công với tên là: HD"+idBill+"\nĐường dẫn là C:\\Users\\ankha\\OneDrive\\Desktop\\Hóa đơn\\HD"+idBill+".docx");
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_PrintActionPerformed

    private void BillDetailTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BillDetailTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)BillDetailTable.getModel();
        int MyIndex=BillDetailTable.getSelectedRow();
        DefaultTableModel proctable=(DefaultTableModel)BillTable.getModel();
//        tf_ProductName.setText(model.getValueAt(MyIndex, 0).toString());
//        tf_Quantity.setText(model.getValueAt(MyIndex, 1).toString());
//        tf_Price.setText(model.getValueAt(MyIndex, 2).toString());
        proc=model.getValueAt(MyIndex, 0).toString();
        price=Integer.parseInt(model.getValueAt(MyIndex, 2).toString());
        PreparedStatement ps;
        ResultSet rs;
        String query="select Quantity from tbProducts where ProductName=?";
        try
        {
            ps=MyConnection.getConnection().prepareStatement(query);
            ps.setString(1,proc);
            rs=ps.executeQuery();
            if (rs.next())
            {
                stock=rs.getInt("Quantity");
            }

        }
        catch(SQLException e)
        {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_BillDetailTableMouseClicked

    public static boolean isValidDateFormat(String inputDate) {
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    dateFormat.setLenient(false);

    try {
        dateFormat.parse(inputDate);
        return true;
    } catch (ParseException e) {
        return false;
    }
}
    private void btn_FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_FindActionPerformed

        PreparedStatement ps;
        ResultSet rs;
        
        int id=0;
        boolean isInput1Integer = isInteger(tf_id.getText());
        if(isInput1Integer)
        {
            id=Integer.parseInt(tf_id.getText());
        }
        String username=tf_user.getText();
        String date1=tf_date.getText();
        boolean isDate1Valid = isValidDateFormat(date1);
        if (!isDate1Valid)
        {
            date1="2002-08-23";
        }
        String query="select * from tbBill where bill_id=? or username=? or bill_date=?";
        
        
        try
        {
            ps=MyConnection.getConnection().prepareStatement(query);
            ps.setInt(1, id);
            ps.setString(2,username);
            ps.setString(3,date1);
            rs=ps.executeQuery();
            if(rs.next())
            {
                ps=MyConnection.getConnection().prepareStatement(query);
                ps.setInt(1, id);
                ps.setString(2,username);
                ps.setString(3,date1);
                rs=ps.executeQuery();
                BillTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Không có hóa đơn");
                MyConnection.getConnection().close();
                SelectBill();
            }
            
        }
        catch(SQLException e)
        {
            System.out.println(e.toString());
            JOptionPane.showMessageDialog(null,"Không có sản phẩm");
        }
    }//GEN-LAST:event_btn_FindActionPerformed

    private int idBill=0;
    public java.util.List<String> ProductNameList=new ArrayList<>();
    public java.util.List<Integer> QuantityList=new ArrayList<>();
    public java.util.List<Integer> PriceList=new ArrayList<>();
    public java.util.List<Integer> ProductPriceTotalList=new ArrayList<>();
    public double sum;
    private String date;
    private String usercreated;
    private void BillTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BillTableMouseClicked
        DefaultTableModel model=(DefaultTableModel)BillTable.getModel();
        int MyIndex=BillTable.getSelectedRow();
        idBill=Integer.parseInt(model.getValueAt(MyIndex, 0).toString());
        
        try
        {
            PreparedStatement ps;
            ResultSet rs;
            //String query="Select * from tbBill_Detail where bill_id=?";
            String query="Select product_name,quantity,price,total from tbBill_Detail where bill_id=?";
            String query2="Select * from tbBill where bill_id=?";
            ps=MyConnection.getConnection().prepareStatement(query);
            ps.setInt(1,idBill);
            rs=ps.executeQuery();
            BillDetailTable.setModel(DbUtils.resultSetToTableModel(rs));
            ps=MyConnection.getConnection().prepareStatement(query);
            ps.setInt(1,idBill);
            rs=ps.executeQuery();
            if (ProductNameList.size()!=0)
            {
                ProductNameList.clear();
                QuantityList.clear();
                PriceList.clear();
                ProductPriceTotalList.clear();
                sum=0;
            }
            while(rs.next())
            {
                ProductNameList.add(rs.getString("product_name"));
                QuantityList.add(rs.getInt("quantity"));
                PriceList.add(rs.getInt("price"));
                ProductPriceTotalList.add(Integer.parseInt(rs.getString("total")));
                sum+=Integer.parseInt(rs.getString("total"));
            }
            for (String item : ProductNameList) {
            System.out.println(item);
            ps=MyConnection.getConnection().prepareStatement(query2);
            ps.setInt(1,idBill);
            rs=ps.executeQuery();
            if(rs.next())
            {
                date=rs.getDate("bill_date").toString();
                usercreated=rs.getString("username");
            }
            tf_id.setText(String.valueOf(idBill));
            tf_user.setText(usercreated);
            tf_date.setText(date);
            System.out.println(date);
            System.out.println(usercreated);
        }
            
            
        }
        catch(SQLException e)
        {
            System.out.println(e.toString());
        }
        
    }//GEN-LAST:event_BillTableMouseClicked

    private void lbTDHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbTDHMouseClicked
        // TODO add your handling code here:
        User pr=new User();
        pr.setVisible(true);
        pr.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_lbTDHMouseClicked

    public void getClear()
    {
//        tf_ProductName.setText("");
//        tf_ProductId.setText("");
//        tf_ProductQuantity.setText("");
//        tf_ProductPrice.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User().setVisible(true);
//                lbUser.setText(userloged);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BillDetailTable;
    private javax.swing.JTable BillTable;
    private javax.swing.JButton btn_Find;
    private javax.swing.JButton btn_Logout;
    private javax.swing.JButton btn_Print;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbQLSP;
    private javax.swing.JLabel lbQLTK;
    private javax.swing.JLabel lbTDH;
    private javax.swing.JLabel lbUser;
    private javax.swing.JTextField tf_date;
    private javax.swing.JTextField tf_id;
    private javax.swing.JTextField tf_user;
    // End of variables declaration//GEN-END:variables
}
